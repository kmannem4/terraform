name: "1.0$(rev:.r)"

resources:
  repositories:
    - repository: amn-az-tf-common-pipelines
      type: git
      name: "Terraform/amn-az-tf-common-pipelines"
    - repository: amn-az-tfm-resourcegroup
      type: git
      name: "Terraform/amn-az-tfm-resourcegroup"
    - repository: amn-az-tfm-backupvault
      type: git
      name: "Terraform/amn-az-tfm-backupvault"
    - repository: amn-az-tfm-storage-account
      type: git
      name: "Terraform/amn-az-tfm-storage-account"
    - repository: amn-az-tfm-role-assignment
      type: git
      name: "Terraform/amn-az-tfm-role-assignment"

variables:
  - name: moduleHeader
    value: "Terraform module to deploy and manage a Backup Blob Storage Service in Azure."

  - name: exampleScenario
    value: "Create a Backup Blob Storage <br /><br /> The following steps in example to using this module:<br /> - Create resource group<br /> - Create a Backup Blob Storage"

  - template: variables/az-tf-module-common-variables.yaml@amn-az-tf-common-pipelines
    parameters:
      repoName: amn-az-tfm-backup-blob-storage

trigger:
  - none

stages:
  - template: templates/az-tf-module-pr-template.yaml@amn-az-tf-common-pipelines
    parameters:
      WorkingDirectory: $(workingDirectory)
      ServiceArm: $(ServiceArm)
      VarFilePath: '"$(workingDirectory)/$(environment)".tfvars'
      TestDirectory: "tests/apply_validation_tests"
      PoolName: "shac_linux_infra"
      DependentRepositories:
        - "amn-az-tfm-resourcegroup"
        - "amn-az-tfm-backupvault"
        - "amn-az-tfm-storage-account"
        - "amn-az-tfm-role-assignment"
        
  - stage: RaisePR
    displayName: 'Raise PR to Default Branch'
    condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
    jobs:
    - template: templates/readme-pr-template.yaml@amn-az-tf-common-pipelines
      parameters:
        TARGET_BRANCH_NAME: 'main'  # Replace with your default branch
